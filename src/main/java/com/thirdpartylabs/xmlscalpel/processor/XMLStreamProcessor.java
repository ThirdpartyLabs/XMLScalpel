/*
 * XMLScalpel random access XML processor
 *
 * Copyright (c) 2020- Rob Ruchte, rob@thirdpartylabs.com
 *
 * Licensed under the License specified in file LICENSE, included with the source code.
 * You may not use this file except in compliance with the License.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.thirdpartylabs.xmlscalpel.processor;

import com.thirdpartylabs.xmlscalpel.entity.Fragment;

/**
 * XMLStreamProcessor instances are provided to StreamingXMLReader and will receive all of the Fragments
 * generated by the reader.
 */
public interface XMLStreamProcessor
{
    /**
     * Accept Fragment objects from the StreamingXMLReader. The reader will call this method as each
     * Fragment is extracted from the XML file
     *
     * @param fragment Wrapper object that contains a DocumentFragment and an XMLByteLocation object
     */
    void process(Fragment fragment);

    /**
     * StreamingXMLReader will set the total number of bytes in the file before it begins parsing the file.
     * You can use this along with the byte offsets provided in the XMLByteLocation objects to keep track
     * of the parsing progress.
     *
     * @param bytesTotal Total bytes in the file being processed
     */
    void setBytesTotal(long bytesTotal);
}